{"version":3,"sources":["backbone.service.js"],"names":[],"mappings":"AAAA,AAAC,CAAA,UAAU,MAAM,EAAE,OAAO,EAAE;AAC1B,SAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE,OAAO,CAAC,YAAY,CAAC,EAAE,OAAO,CAAC,yBAAyB,CAAC,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC,GACrM,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,gBAAgB,EAAE,YAAY,EAAE,yBAAyB,EAAE,aAAa,CAAC,EAAE,OAAO,CAAC,GACxI,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,eAAe,CAAC,CAAA;CACnG,CAAA,CAAC,IAAI,EAAE,UAAU,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,eAAe,EAAE;AAAE,cAAY,CAAC;;AAEpE,MAAM,QAAQ,GAAG,eAAe,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;;AAEnD,OAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;;;;;AAKxC,MAAI,gBAAgB,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;;;;AAI1C,eAAW,EAAA,uBAAG;;;AACZ,UAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC;eAAM,QAAQ,CAAC,IAAI,CAAC;iBAAM,MAAK,KAAK,EAAE;SAAA,CAAC;OAAA,CAAC,CAAC;AAC5D,UAAI,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;AAC1C,OAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AAC7B,cAAK,KAAK,CAAC,GAAG,EAAE,YAAa;4CAAT,IAAI;AAAJ,gBAAI;;;AACtB,cAAI,OAAO,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC;mBAAM,MAAK,GAAG,OAAC,QAAI,IAAI,CAAC;WAAA,CAAC,CAAC;;AAErD,iBAAO,SAAM,CAAC,UAAA,GAAG,EAAI;AACnB,kBAAK,OAAO,CAAC,GAAG,CAAC,CAAC;WACnB,CAAC,CAAC;;AAEH,iBAAO,OAAO,CAAC;SAChB,CAAC,CAAC;OACJ,CAAC,CAAC;;AAEH,UAAI,CAAC,MAAM,MAAA,CAAX,IAAI,EAAW,SAAS,CAAC,CAAC;KAC3B;;;;;;AAMD,SAAK,EAAA,iBAAG,EAAE;;;;;;AAMV,SAAK,EAAA,iBAAG,EAAE;;;;;;AAMV,WAAO,EAAA,mBAAG,EAAE;GACb,CAAC,CAAC;;AAEH,SAAO,gBAAgB,CAAC;CAEzB,CAAC,CAAE","file":"backbone.service.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('backbone.radio'), require('underscore'), require('backbone-metal-classify'), require('es6-promise')) :\n  typeof define === 'function' && define.amd ? define(['backbone.radio', 'underscore', 'backbone-metal-classify', 'es6-promise'], factory) :\n  global.Backbone.Service = factory(global.Radio, global._, global.classify, global.PromisePolyfill)\n}(this, function (Radio, _, classify, PromisePolyfill) { 'use strict';\n\n  const resolved = PromisePolyfill.Promise.resolve();\n\n  Radio.Channel = classify(Radio.Channel);\n\n  /**\n   * @class Service\n   */\n  var backbone_service = Radio.Channel.extend({\n    /**\n     * @constructs Service\n     */\n    constructor() {\n      let start = _.once(() => resolved.then(() => this.start()));\n      let requests = _.result(this, 'requests');\n      _.each(requests, (val, key) => {\n        this.reply(key, (...args) => {\n          let promise = start().then(() => this[val](...args));\n\n          promise.catch(err => {\n            this.onError(err);\n          });\n\n          return promise;\n        });\n      });\n\n      this._super(...arguments);\n    },\n\n    /**\n     * @abstract\n     * @method setup\n     */\n    setup() {},\n\n    /**\n     * @abstract\n     * @method start\n     */\n    start() {},\n\n    /**\n     * @abstract\n     * @method onError\n     */\n    onError() {}\n  });\n\n  return backbone_service;\n\n}));\n//# sourceMappingURL=./backbone.service.js.map"],"sourceRoot":"/source/"}